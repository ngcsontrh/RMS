// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SRM.Data;

#nullable disable

namespace SRM.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250409042205_AddDeTaiColumns")]
    partial class AddDeTaiColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SRM.Domain.Entities.CapDeTai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CapDeTai");
                });

            modelBuilder.Entity("SRM.Domain.Entities.CongBo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ChiSoTacDong")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiemHoiDong")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DongTacGias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileMinhChungBaiBao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ky")
                        .HasColumnType("int");

                    b.Property<string>("LinkBaiBao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkMinhChungLoaiQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkMinhChungTapChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiHoTroChiPhi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCongBo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGuiDang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaXuatBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NoiDangBaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhanChiaSuDongGop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGiaChinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGiaLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tap")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHoiDong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTapChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ThanhQuaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Trang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NoiDangBaoId");

                    b.HasIndex("ThanhQuaId");

                    b.ToTable("CongBo");
                });

            modelBuilder.Entity("SRM.Domain.Entities.DeTai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CanBoThamGias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CapDeTaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChuNhiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonViChuTriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HoSoNghiemThu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoSoSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("KinhPhiHangNam")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucTieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiDeXuatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhanChiaSuDongGop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TongKinhPhi")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiPheDuyet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CapDeTaiId");

                    b.HasIndex("DonViChuTriId");

                    b.HasIndex("NguoiDeXuatId");

                    b.ToTable("DeTai");
                });

            modelBuilder.Entity("SRM.Domain.Entities.DonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DonVi");
                });

            modelBuilder.Entity("SRM.Domain.Entities.DonViChuTri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DonViChuTri");
                });

            modelBuilder.Entity("SRM.Domain.Entities.HoatDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChuNhiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuongDan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDinhKem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("KinhPhi")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("LoaiHoatDongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhanChiaSuDongGop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoTiet")
                        .HasColumnType("int");

                    b.Property<int?>("SoTrang")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhVienThamGias")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiHoatDongId");

                    b.ToTable("HoatDong");
                });

            modelBuilder.Entity("SRM.Domain.Entities.LoaiHoatDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiHoatDong");
                });

            modelBuilder.Entity("SRM.Domain.Entities.NoiDangBao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NoiDangBao");
                });

            modelBuilder.Entity("SRM.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("SRM.Domain.Entities.ThanhQua", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThanhQua");
                });

            modelBuilder.Entity("SRM.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChucDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChuyenNganh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DanToc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonViId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HocVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaVienChuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TruongDH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("Email");

                    b.HasIndex("MaVienChuc");

                    b.HasIndex("SoDienThoai");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Password = "AQAAAAIAAYagAAAAENKmRj5jqegps3RqNwm9hCkccpMsKxFAP7p4ty/6/pZLIpwIiecVJv/cnGIQP/3PBQ==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("SRM.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            RoleId = new Guid("00000000-0000-0000-0000-000000000001")
                        });
                });

            modelBuilder.Entity("SRM.Domain.Entities.CongBo", b =>
                {
                    b.HasOne("SRM.Domain.Entities.NoiDangBao", "NoiDangBao")
                        .WithMany()
                        .HasForeignKey("NoiDangBaoId");

                    b.HasOne("SRM.Domain.Entities.ThanhQua", "ThanhQua")
                        .WithMany()
                        .HasForeignKey("ThanhQuaId");

                    b.Navigation("NoiDangBao");

                    b.Navigation("ThanhQua");
                });

            modelBuilder.Entity("SRM.Domain.Entities.DeTai", b =>
                {
                    b.HasOne("SRM.Domain.Entities.CapDeTai", "CapDeTai")
                        .WithMany()
                        .HasForeignKey("CapDeTaiId");

                    b.HasOne("SRM.Domain.Entities.DonViChuTri", "DonViChuTri")
                        .WithMany()
                        .HasForeignKey("DonViChuTriId");

                    b.HasOne("SRM.Domain.Entities.User", "NguoiDeXuat")
                        .WithMany()
                        .HasForeignKey("NguoiDeXuatId");

                    b.Navigation("CapDeTai");

                    b.Navigation("DonViChuTri");

                    b.Navigation("NguoiDeXuat");
                });

            modelBuilder.Entity("SRM.Domain.Entities.HoatDong", b =>
                {
                    b.HasOne("SRM.Domain.Entities.LoaiHoatDong", "LoaiHoatDong")
                        .WithMany()
                        .HasForeignKey("LoaiHoatDongId");

                    b.Navigation("LoaiHoatDong");
                });

            modelBuilder.Entity("SRM.Domain.Entities.User", b =>
                {
                    b.HasOne("SRM.Domain.Entities.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonViId");

                    b.Navigation("DonVi");
                });

            modelBuilder.Entity("SRM.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("SRM.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRM.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SRM.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
